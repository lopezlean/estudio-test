{"version":3,"file":"forms.js","mappings":"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","sources":["webpack://staticsnap/./src/forms/app/src/forms.ts","webpack://staticsnap/webpack/bootstrap","webpack://staticsnap/webpack/runtime/define property getters","webpack://staticsnap/webpack/runtime/hasOwnProperty shorthand","webpack://staticsnap/webpack/runtime/make namespace object","webpack://staticsnap/./src/forms/app/src/start.ts"],"sourcesContent":["// jQuery is available in the global scope\ndeclare const jQuery: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const elementorFrontend: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const grecaptcha: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const StaticSnapFrontendConfig: {\n  recaptcha_site_key: string;\n};\n\nexport default class Forms {\n  private selector: string = '[static-snap-type=\"form\"]';\n  private submitButtonSelector: string = '[type=\"submit\"]';\n\n  // constructor\n  constructor() {\n    console.log('Forms class initialized');\n    this.bindEvents();\n    //this.bindPluginsEvents();\n  }\n\n  public bindPluginsEvents = () => {\n    jQuery(window).on('elementor/frontend/init', () => {\n      elementorFrontend.hooks.addAction(\n        'frontend/element_ready/widget',\n        (scope: Array<{ dataset: { widget_type: string } }> | undefined) => {\n          if (scope && scope[0].dataset?.widget_type === 'form.default') {\n            this.bindEvents();\n          }\n        }\n      );\n    });\n\n    jQuery(window).on('elementor/popup/show', () => {\n      this.bindEvents();\n    });\n  };\n\n  public getForms = (): NodeListOf<HTMLFormElement> => {\n    // get all static_snap_type=\"form\" elements\n    return document.querySelectorAll(this.selector) as NodeListOf<HTMLFormElement>;\n  };\n\n  /**\n   * Remove form submit events\n   * @param form HTMLFormElement\n   * @returns void\n   */\n  public unbindSubmitEvents = (form: HTMLFormElement) => {\n    setTimeout(() => {\n      jQuery(form).off('submit');\n    }, 500);\n  };\n\n  /**\n   * Clone forms to remove events\n   */\n  public bindEvents = () => {\n    const forms = this.getForms();\n\n    forms.forEach((form) => {\n      // check if form is already initialized\n      if (form.getAttribute('data-initialized') === 'true') {\n        return;\n      }\n      // remove all jQuery submit events\n      this.unbindSubmitEvents(form);\n      // add a new submit event\n      form.addEventListener('submit', (e) => this.onSubmit(e, form));\n      // mark form as initialized\n      form.setAttribute('data-initialized', 'true');\n    });\n  };\n\n  public onSubmit = async (e: Event, form: HTMLFormElement) => {\n    e.preventDefault();\n    // disable submit button\n\n    form.querySelector(this.submitButtonSelector)?.setAttribute('disabled', 'disabled');\n\n    grecaptcha.ready(() => {\n      grecaptcha\n        .execute(StaticSnapFrontendConfig.recaptcha_site_key, { action: 'submit' })\n        .then(async (token: string) => {\n          const formData = new FormData(form);\n          // send form data to action URL as json\n          const response = (await fetch(form.action, {\n            body: JSON.stringify(Object.fromEntries(formData)),\n            headers: {\n              'Content-Type': 'application/json',\n              // recaptcha token\n              'G-Recaptcha-Response': token,\n            },\n            method: 'POST',\n          })) as Response;\n          const responseCode = response.status;\n          const data = await response.json();\n          form.querySelector(this.submitButtonSelector)?.removeAttribute('disabled');\n\n          if (responseCode === 200) {\n            form.reset();\n          } else {\n            console.error('Error:', data);\n          }\n        });\n    });\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Forms from './forms';\n\nnew Forms();\n"],"names":["Forms","selector","submitButtonSelector","constructor","console","log","bindEvents","bindPluginsEvents","jQuery","window","on","elementorFrontend","hooks","addAction","scope","dataset","widget_type","getForms","document","querySelectorAll","unbindSubmitEvents","form","setTimeout","off","forms","forEach","getAttribute","addEventListener","e","onSubmit","setAttribute","preventDefault","querySelector","grecaptcha","ready","execute","StaticSnapFrontendConfig","recaptcha_site_key","action","then","token","formData","FormData","response","fetch","body","JSON","stringify","Object","fromEntries","headers","method","responseCode","status","data","json","removeAttribute","reset","error"],"sourceRoot":""}