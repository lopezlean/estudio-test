{"version":3,"file":"environments-form.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/components/environments/environments-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Stack from '@mui/material/Stack';\nimport FormProvider from '@staticsnap/dashboard/components/form/form-provider';\nimport InputsForExtensionsSetting from '@staticsnap/dashboard/components/form/inputs-for-extension-setting';\nimport Select from '@staticsnap/dashboard/components/form/select';\nimport TextField from '@staticsnap/dashboard/components/form/text-field';\nimport EnvironmentTypeInterface from '@staticsnap/dashboard/interfaces/environment-type.interface';\nimport EnvironmentInterface from '@staticsnap/dashboard/interfaces/environment.interface';\nimport {\n  ExtensionSetting,\n  ExtensionSettingValue,\n} from '@staticsnap/dashboard/interfaces/extension.interface';\nimport { paths } from '@staticsnap/dashboard/routes/paths';\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { useForm } from 'react-hook-form';\n\ntype EnvironmentFormProps = {\n  title: string;\n  value?: EnvironmentInterface;\n  errors?: Record<string, string>;\n  onSubmit: (data: EnvironmentInterface) => void;\n  onDelete?: (data: EnvironmentInterface) => void;\n};\nconst EnvironmentForm = ({ title, value, onSubmit, onDelete, errors }: EnvironmentFormProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [environmentTypes, setEnvironmentTypes] = useState<\n    Record<string, EnvironmentTypeInterface>\n  >({});\n  const [environmentSettings, setEnvironmentSettings] = useState<ExtensionSetting>({});\n  const defaultValues: EnvironmentInterface = value || {\n    id: '',\n    name: '',\n    type: 'file',\n    valid: true,\n  };\n\n  const methods = useForm({\n    defaultValues,\n  });\n\n  const isDirty = methods.formState.isDirty;\n\n  // watch type change.\n  const selectedType = methods.watch(['type'])[0];\n\n  useEffect(() => {\n    if (selectedType && environmentTypes[selectedType]) {\n      // fill default values from settings\n      const settingsValues = Object.keys(environmentTypes[selectedType].settings).reduce(\n        (acc, name) => {\n          let formValue = undefined;\n          if (value && value.settings && value.settings[name]) {\n            formValue = value.settings[name];\n          }\n          const settingValue =\n            formValue ||\n            ((environmentTypes[selectedType].settings[name].default ||\n              '') as ExtensionSettingValue);\n          acc[name] = settingValue;\n          return acc;\n        },\n        {} as { [key: string]: ExtensionSettingValue }\n      );\n      methods.setValue('settings', settingsValues);\n      setEnvironmentSettings(environmentTypes[selectedType].settings);\n    }\n  }, [selectedType, environmentTypes, methods, value]);\n\n  // set errors\n  useEffect(() => {\n    if (errors) {\n      Object.keys(errors).map((key) =>\n        methods.setError(key as keyof EnvironmentInterface, {\n          message: errors[key],\n          type: 'manual',\n        })\n      );\n    }\n  }, [errors, methods]);\n\n  const getTypes = () => {\n    apiFetch({ path: '/static-snap/v1/extensions/environment_type' }).then((types) => {\n      setEnvironmentTypes(types as Record<string, EnvironmentTypeInterface>);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getTypes();\n  }, []);\n\n  const environmentTypesForSelect = Object.keys(environmentTypes).map((type) => {\n    const current = environmentTypes[type];\n    const disabled = !current.available;\n    const needsConnectText = current.needsConnect\n      ? ' ' + __('(needs Static Snap Connect)', 'static-snap')\n      : '';\n    return {\n      disabled,\n      label: type + (current.available ? '' : needsConnectText),\n      value: type,\n    };\n  });\n\n  return (\n    <Card elevation={0}>\n      <CardHeader\n        title={title}\n        action={\n          <Button variant=\"text\" color=\"inherit\" href={paths.environments.index}>\n            Back\n          </Button>\n        }\n      />\n      <CardContent>\n        {/* Form */}\n        <FormProvider methods={methods} onSubmit={methods.handleSubmit(onSubmit)}>\n          <Stack direction=\"column\" spacing={2}>\n            {/* Type */}\n            <Select name=\"type\" items={environmentTypesForSelect} label=\"Type\" />\n            {/* Name */}\n            <TextField name=\"name\" label=\"Name\" required />\n            {/* Dynamic setttings */}\n            <InputsForExtensionsSetting setting={environmentSettings} />\n            {/* Save */}\n            <Stack\n              direction=\"row\"\n              alignItems={onDelete ? 'flex-start' : 'flex-end'}\n              justifyContent={onDelete ? 'space-between' : 'end'}\n              sx={{ mt: 3 }}\n            >\n              {onDelete && (\n                <LoadingButton\n                  variant=\"text\"\n                  color=\"error\"\n                  loading={isLoading}\n                  onClick={useCallback(() => {\n                    onDelete(defaultValues);\n                  }, [onDelete, defaultValues])}\n                >\n                  {__('Delete', 'static-snap')}\n                </LoadingButton>\n              )}\n              <LoadingButton\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isLoading}\n                disabled={!isDirty}\n              >\n                {__('Save', 'static-snap')}\n              </LoadingButton>\n            </Stack>\n          </Stack>\n        </FormProvider>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default EnvironmentForm;\n"]}