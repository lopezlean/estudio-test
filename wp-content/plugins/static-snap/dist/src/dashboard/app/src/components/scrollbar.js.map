{"version":3,"file":"scrollbar.js","sourceRoot":"","sources":["../../../../../../src/dashboard/app/src/components/scrollbar.tsx"],"names":[],"mappings":";;;;;AAAA,+BAAyC;AACzC,kEAAoC;AACpC,4EAAwC;AACxC,+CAAqD;AAExC,QAAA,mBAAmB,GAAG,IAAA,eAAM,EAAC,KAAK,CAAC,CAAC,cAAM,OAAA,CAAC;IACtD,QAAQ,EAAE,CAAC;IACX,MAAM,EAAE,MAAM;IACd,QAAQ,EAAE,QAAQ;CACnB,CAAC,EAJqD,CAIrD,CAAC,CAAC;AAES,QAAA,eAAe,GAAG,IAAA,eAAM,EAAC,yBAAS,CAAC,CAAC,UAAC,EAAS;QAAP,KAAK,WAAA;IAAO,OAAA,CAAC;QAC/D,SAAS,EAAE,MAAM;QACjB,wBAAwB,EAAE;YACxB,UAAU,EAAE;gBACV,eAAe,EAAE,IAAA,cAAK,EAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;aACtD;YACD,4BAA4B,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACX;SACF;QACD,uCAAuC,EAAE;YACvC,KAAK,EAAE,EAAE;SACV;QACD,8DAA8D,EAAE;YAC9D,MAAM,EAAE,CAAC;SACV;QACD,mBAAmB,EAAE;YACnB,MAAM,EAAE,SAAS;SAClB;KACF,CAAC;AAnB8D,CAmB9D,CAAC,CAAC;AASJ,SAAS,SAAS,CAAC,EAA0C;IAAxC,IAAA,QAAQ,cAAA,EAAE,EAAE,QAAA,EAAK,KAAK,sBAAxB,kBAA0B,CAAF;IACzC,IAAM,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC;IAEjF,IAAM,QAAQ,GAAG,gEAAgE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAElG,IAAI,QAAQ,EAAE,CAAC;QACb,OAAO,CACL,uBAAC,aAAG,qBAAC,EAAE,qBAAI,SAAS,EAAE,MAAM,IAAK,EAAE,KAAQ,KAAK,cAC7C,QAAQ,IACL,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,uBAAC,2BAAmB,cAClB,uBAAC,uBAAe,qBAAC,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAM,KAAK,cACpD,QAAQ,IACO,GACE,CACvB,CAAC;AACJ,CAAC;AAED,kBAAe,IAAA,YAAI,EAAC,IAAA,kBAAU,EAAC,SAAS,CAAC,CAAC,CAAC","sourcesContent":["import { forwardRef, memo } from 'react';\nimport Box from '@mui/material/Box';\nimport SimpleBar from 'simplebar-react';\nimport { alpha, styled } from '@mui/material/styles';\n\nexport const StyledRootScrollbar = styled('div')(() => ({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden',\n}));\n\nexport const StyledScrollbar = styled(SimpleBar)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48),\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1,\n    },\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10,\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6,\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ntype ScrollbarProps = {\n  sx?: object;\n  children: React.ReactNode;\n};\n\nfunction Scrollbar({ children, sx, ...other }: ScrollbarProps) {\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent;\n\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <StyledRootScrollbar>\n      <StyledScrollbar clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </StyledScrollbar>\n    </StyledRootScrollbar>\n  );\n}\n\nexport default memo(forwardRef(Scrollbar));\n"]}