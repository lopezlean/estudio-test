{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/pages/connect/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Alert from '@mui/material/Alert';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\n\nimport Icon from '@staticsnap/dashboard/components/icon';\nimport { STATIC_SNAP_URL } from '@staticsnap/dashboard/constants';\n\nconst ConnectIndex = () => {\n  const [code, setCode] = useState<boolean | string>(false);\n  const [connected, setConnected] = useState<boolean | undefined>(undefined);\n  const [settingsConnect, setSettingsConnect] = useState<Record<string, string> | undefined>(\n    undefined\n  );\n  const [isLoading, setIsLoading] = useState(true);\n\n  const escapedReturnURL = encodeURIComponent(window.location.href);\n\n  const disconnectHandler = useCallback(async () => {\n    // confirm disconnect\n    if (!window.confirm(__('Are you sure you want to disconnect?', 'static-snap'))) {\n      return;\n    }\n    setIsLoading(true);\n    const response = (await apiFetch({\n      method: 'DELETE',\n      path: '/static-snap/v1/connect',\n    })) as { disconnected: boolean };\n    setIsLoading(false);\n    setConnected(response.disconnected ? undefined : true);\n    setSettingsConnect(undefined);\n  }, []);\n\n  // get code in searchQuery\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    if (searchParams.has('code')) {\n      setCode(searchParams.get('code') as string);\n    }\n  }, []);\n\n  useEffect(() => {\n    const connect = async () => {\n      const response = (await apiFetch({\n        data: {\n          code,\n        },\n        method: 'POST',\n        path: '/static-snap/v1/connect',\n      })) as { connected: boolean };\n      console.log(response);\n      setConnected(response.connected);\n\n      // remove search code from searchQuery\n      const searchParams = new URLSearchParams(window.location.search);\n      searchParams.delete('code');\n      // get # part of the URL\n      const hash = window.location.hash;\n      window.history.replaceState(\n        {},\n        document.title,\n        `${window.location.pathname}?${searchParams}${hash}`\n      );\n      setCode(false);\n    };\n\n    if (code) {\n      connect();\n    }\n  }, [code]);\n\n  useEffect(() => {\n    const getSettings = async () => {\n      const response = (await apiFetch({\n        path: '/static-snap/v1/settings',\n      })) as { connect: Record<string, string> };\n\n      setSettingsConnect(response.connect as Record<string, string>);\n      setIsLoading(false);\n    };\n\n    getSettings();\n  }, []);\n\n  return (\n    <Card elevation={0}>\n      <CardHeader title={__('Connect with StaticSnap', 'static-snap')} />\n      <CardContent>\n        {connected === true && (\n          <Alert icon={<Icon icon={'material-symbols:check'} />} severity=\"success\">\n            {__('Connected successfully!', 'static-snap')}\n          </Alert>\n        )}\n        {connected === false && (\n          <Alert icon={<Icon icon={'material-symbols:error'} />} severity=\"error\">\n            {__('Failed to connect. Please try again.', 'static-snap')}\n          </Alert>\n        )}\n        <p>\n          {__(\n            'Transform your dynamic WordPress site into a high-performance, secure static website with Static Snap! By connecting your site to our platform, you can seamlessly integrate with GitHub, enabling automatic deployments to top-tier hosting services like Vercel, Cloudflare Pages, Amazon S3, Netlify, AWS Amplify, Heroku, GitLab Pages, and Bitbucket Cloud. Experience the ease of deploying front-end frameworks and optimize your projectâ€™s reach and flexibility. Join Static Snap today and start deploying smarter!\t\t\t\t\t\t',\n            'static-snap'\n          )}\n        </p>\n        {settingsConnect && settingsConnect.installation_id ? (\n          <>\n            <Alert severity=\"info\" sx={{ mb: 5 }}>\n              {__('You are connected', 'static-snap')}\n            </Alert>\n            <LoadingButton\n              variant=\"contained\"\n              size=\"large\"\n              color=\"error\"\n              onClick={disconnectHandler}\n              loading={isLoading}\n            >\n              {__('Disconnect', 'static-snap')}\n            </LoadingButton>\n          </>\n        ) : (\n          <>\n            <Alert severity=\"info\" sx={{ mb: 5 }}>\n              {__(\n                \"Clicking on connect will redirect you to Static Snap's website to connect your WordPress site to the platform.\",\n                'static-snap'\n              )}\n            </Alert>\n            <LoadingButton\n              loading={!!code}\n              disabled={connected === true || isLoading}\n              variant=\"contained\"\n              size=\"large\"\n              href={`${STATIC_SNAP_URL}/connect-website?website=${escapedReturnURL}`}\n            >\n              {__('Connect', 'static-snap')}\n            </LoadingButton>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ConnectIndex;\n"]}