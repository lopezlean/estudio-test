{"version":3,"file":"use-responsive.js","sourceRoot":"","sources":["../../../../../../src/dashboard/app/src/hooks/use-responsive.ts"],"names":[],"mappings":";;;;AAAA,OAAO;AACP,+CAA4D;AAC5D,sFAAwD;AAUxD,SAAgB,aAAa,CAAC,KAAY,EAAE,KAAa,EAAE,GAAW;IACpE,IAAM,KAAK,GAAG,IAAA,iBAAQ,GAAE,CAAC;IAEzB,IAAM,OAAO,GAAG,IAAA,uBAAa,EAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,KAAc,CAAC,CAAC,CAAC;IAEpE,IAAM,SAAS,GAAG,IAAA,uBAAa,EAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAc,CAAC,CAAC,CAAC;IAExE,IAAM,YAAY,GAAG,IAAA,uBAAa,EAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,KAAc,EAAE,GAAY,CAAC,CAAC,CAAC;IAE5F,IAAM,SAAS,GAAG,IAAA,uBAAa,EAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAmB,CAAC,CAAC,CAAC;IAE7E,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QACnB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,IAAI,KAAK,KAAK,MAAM,EAAE,CAAC;QACrB,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AAxBD,sCAwBC;AAMD,SAAgB,QAAQ;IACtB,IAAM,KAAK,GAAG,IAAA,iBAAQ,GAAE,CAAC;IAEzB,IAAM,IAAI,GAAG,0BAAI,KAAK,CAAC,WAAW,CAAC,IAAI,QAAE,OAAO,EAAE,CAAC;IAEnD,OAAO,CACL,IAAI,CAAC,MAAM,CAAC,UAAC,MAAwB,EAAE,GAAe;QACpD,sDAAsD;QACtD,IAAM,OAAO,GAAG,IAAA,uBAAa,EAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAEzD,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3C,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CACjB,CAAC;AACJ,CAAC;AAbD,4BAaC","sourcesContent":["// @mui\nimport { useTheme, Breakpoint } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// ----------------------------------------------------------------------\n\ntype ReturnType = boolean;\n\ntype Query = 'up' | 'down' | 'between' | 'only';\n\ntype Value = Breakpoint | number;\n\nexport function useResponsive(query: Query, start?: Value, end?: Value): ReturnType {\n  const theme = useTheme();\n\n  const mediaUp = useMediaQuery(theme.breakpoints.up(start as Value));\n\n  const mediaDown = useMediaQuery(theme.breakpoints.down(start as Value));\n\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start as Value, end as Value));\n\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(start as Breakpoint));\n\n  if (query === 'up') {\n    return mediaUp;\n  }\n\n  if (query === 'down') {\n    return mediaDown;\n  }\n\n  if (query === 'between') {\n    return mediaBetween;\n  }\n\n  return mediaOnly;\n}\n\n// ----------------------------------------------------------------------\n\ntype BreakpointOrNull = Breakpoint | null;\n\nexport function useWidth() {\n  const theme = useTheme();\n\n  const keys = [...theme.breakpoints.keys].reverse();\n\n  return (\n    keys.reduce((output: BreakpointOrNull, key: Breakpoint) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n\n      return !output && matches ? key : output;\n    }, null) || 'xs'\n  );\n}\n"]}