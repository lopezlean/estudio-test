{"version":3,"file":"text-field.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/components/form/text-field.tsx"],"names":[],"mappings":";;;;AAEA,8EAAmD;AACnD,mDAA6D;AAa7D,IAAM,SAAS,GAAG,UAAC,EAUF;QATf,IAAI,UAAA,EACJ,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,iBAAiB,EAAjB,SAAS,mBAAG,KAAK,KAAA,EACjB,IAAI,UAAA,EACJ,UAAU,gBAAA,EACV,eAAe,qBAAA;IAEP,IAAA,OAAO,GAAK,IAAA,gCAAc,GAAE,QAArB,CAAsB;IAErC,OAAO,CACL,uBAAC,4BAAU,IACT,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,UAAC,EAAqB;gBAAnB,KAAK,WAAA,EAAE,UAAU,gBAAA;YAAO,OAAA,CACjC,uBAAC,mBAAY,uBACP,KAAK,IACT,OAAO,EAAC,UAAU,EAClB,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,KAAK,EACZ,eAAe,EAAE,eAAe,EAChC,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,EACpE,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,EACzB,UAAU,EAAE,UAAU,IACtB,CACH;QAfkC,CAelC,GACD,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["import { InputProps } from '@mui/material/Input';\nimport { InputLabelProps } from '@mui/material/InputLabel';\nimport MuiTextField from '@mui/material/TextField';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nexport type TextFieldProps = {\n  name: string;\n  label: string;\n  type?: React.InputHTMLAttributes<unknown>['type'];\n  helperText?: string;\n  required?: boolean;\n  multiline?: boolean;\n  rows?: number;\n  InputProps?: Partial<InputProps>;\n  InputLabelProps?: Partial<InputLabelProps>;\n};\nconst TextField = ({\n  name,\n  label,\n  type,\n  required,\n  helperText,\n  multiline = false,\n  rows,\n  InputProps,\n  InputLabelProps,\n}: TextFieldProps) => {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState }) => (\n        <MuiTextField\n          {...field}\n          variant=\"outlined\"\n          required={required}\n          label={label}\n          InputLabelProps={InputLabelProps}\n          size=\"small\"\n          type={type}\n          multiline={multiline}\n          rows={rows}\n          helperText={fieldState.error ? fieldState.error.message : helperText}\n          error={!!fieldState.error}\n          InputProps={InputProps}\n        />\n      )}\n    />\n  );\n};\n\nexport default TextField;\n"]}