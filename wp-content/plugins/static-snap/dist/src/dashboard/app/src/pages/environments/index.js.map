{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/pages/environments/index.tsx"],"names":[],"mappings":";;;;AAAA,+BAA4C;AAE5C,wEAA0C;AAC1C,2EAA4C;AAC5C,qDAA+C;AAE/C,+FAAiE;AAEjE,4DAA2D;AAE3D,SAAwB,iBAAiB;IACvC,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAEzB,IAAA,KAAkC,IAAA,gBAAQ,EAAyB,EAAE,CAAC,EAArE,YAAY,QAAA,EAAE,eAAe,QAAwC,CAAC;IACvE,IAAA,KAAwB,IAAA,gBAAQ,EAAC,IAAI,CAAC,EAArC,OAAO,QAAA,EAAE,UAAU,QAAkB,CAAC;IAC7C,IAAM,WAAW,GAAG;QAClB,IAAA,mBAAQ,EAAC,EAAE,IAAI,EAAE,8BAA8B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;YACnE,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,YAAsC,CAAC,CAAC,CAAC;YACpE,UAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAA,iBAAS,EAAC;QACR,WAAW,EAAE,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,uBAAC,eAAK,IACJ,KAAK,EAAC,cAAc,EACpB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,YAAY,EAClB,OAAO,EAAE;YACP,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE;YACrC,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE;SACtC,EACD,OAAO,EAAE;YACP;gBACE,QAAQ,EAAE,MAAM;gBAChB,EAAE,EAAE,MAAM;gBACV,UAAU,EAAE,UAAC,IAAI;oBACf,yCAAyC;oBACzC,QAAQ,CAAC,6BAAsB,IAAI,CAAC,EAAE,CAAE,CAAC,CAAC;gBAC5C,CAAC;aACF;SACF,EACD,WAAW,EACT,uBAAC,gBAAM,IAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAE,aAAK,CAAC,YAAY,CAAC,GAAG,gCAE/D,GAEX,CACH,CAAC;AACJ,CAAC;AA1CD,oCA0CC","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useNavigate } from 'react-router-dom';\n\nimport Table from '@staticsnap/dashboard/components/table/table';\nimport EnvironmentInterface from '@staticsnap/dashboard/interfaces/environment.interface';\nimport { paths } from '@staticsnap/dashboard/routes/paths';\n\nexport default function EnvironmentsIndex() {\n  const navigate = useNavigate();\n\n  const [environments, setEnvironments] = useState<EnvironmentInterface[]>([]);\n  const [loading, setLoading] = useState(true);\n  const getSettings = () => {\n    apiFetch({ path: '/static-snap/v1/environments' }).then((environments) => {\n      setEnvironments(Array.from(environments as EnvironmentInterface[]));\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getSettings();\n  }, []);\n\n  return (\n    <Table\n      title=\"Environments\"\n      loading={loading}\n      rows={environments}\n      columns={[\n        { field: 'name', headerName: 'Name' },\n        { field: 'type', headerName: 'Type' },\n      ]}\n      actions={[\n        {\n          children: 'Edit',\n          id: 'edit',\n          onRowClick: (_row) => {\n            // navigate to edit page react-router-dom\n            navigate(`/environments/edit/${_row.id}`);\n          },\n        },\n      ]}\n      cardActions={\n        <Button variant=\"contained\" color=\"primary\" href={paths.environments.add}>\n          Add Environment\n        </Button>\n      }\n    />\n  );\n}\n"]}