{"version":3,"file":"search-module.interface.js","sourceRoot":"","sources":["../../../../../../src/frontend/app/src/interfaces/search-module.interface.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Interface for search modules\n */\nexport default interface SearchModule {\n  /**\n   * Get the type of the search module\n   * @example\n   * ```typescript\n   * public getType() {\n   *  return 'fuse-js';\n   * }\n   * ```\n   */\n  getType: () => string;\n\n  /**\n   * Render the search results\n   * @param target  - The target element to render the results\n   * @param results - The search results\n   * @example\n   * ```typescript\n   * renderResults(target: HTMLElement, results: any) {\n   * target.innerHTML = results.map((result) => `<li>${result.title}</li>`).join('');\n   * }\n   * ```\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  renderResults: (target: HTMLElement, results: any) => void;\n  /**\n   * Search the query\n   * @param query - The search query\n   * @example\n   * ```typescript\n   * search(query: string): Promise<string[]> {\n   * const myIndex = [\"a\",\"b\",\"c\"];\n   * return myIndex.filter((item) => item.includes(query));\n   * }\n   * ```\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  search: (query: string) => Promise<any>;\n}\n"]}