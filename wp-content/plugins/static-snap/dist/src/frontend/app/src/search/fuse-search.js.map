{"version":3,"file":"fuse-search.js","sourceRoot":"","sources":["../../../../../../src/frontend/app/src/search/fuse-search.ts"],"names":[],"mappings":"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","sourcesContent":["import Fuse, { FuseResult, FuseIndex } from 'fuse.js';\nimport Mustache from 'mustache';\n\nimport Frontend from '../frontend';\nimport DocumentType from '../interfaces/document.interface';\nimport SearchModule from '../interfaces/search-module.interface';\n\nexport default class FuseSearch implements SearchModule {\n  private frontend: Frontend;\n  constructor(frontend: Frontend) {\n    this.frontend = frontend;\n  }\n\n  public getType() {\n    return 'fuse-js';\n  }\n\n  private fuse: Fuse<DocumentType> | null = null;\n\n  private searchData: DocumentType[] = [];\n  private searchIndex: FuseIndex<DocumentType> | null = null;\n\n  private fuse_options = {\n    distance: 100,\n    // includeMatches: false,\n    findAllMatches: true,\n    // isCaseSensitive: false,\n\n    ignoreFieldNorm: false,\n    // this is the easiest way to get the search to work if you don't know about scoring theory\n    // read more at here: https://www.fusejs.io/concepts/scoring-theory.html\n    ignoreLocation: true,\n    includeScore: true,\n\n    keys: ['title', 'content', 'excerpt'],\n    shouldSort: true,\n    // minMatchCharLength: 1,\n    // location: 0,\n    threshold: 0.55,\n\n    useExtendedSearch: false,\n  };\n\n  public async search(query: string): Promise<FuseResult<DocumentType>[]> {\n    const fuse = await this.getFuse();\n    const results = fuse.search(query);\n    return results;\n  }\n\n  private getOptions() {\n    const config = this.frontend.config().options.search?.settings || {};\n    // convert all fuse_* to fuse options\n    Object.keys(config).forEach((key) => {\n      if (key.startsWith('fuse_')) {\n        //const option = key.replace('fuse_', '');\n        // this.fuse_options[option as keyof typeof this.fuse_options] =\n        // config[key as keyof typeof config];\n      }\n    });\n    const locale = this.frontend.config().locale;\n    if (locale) {\n      // check if locale exists in this.searchData first element\n      const firstElement = this.searchData[0];\n      if (typeof firstElement[locale as keyof typeof firstElement] === 'object') {\n        const keys = this.fuse_options.keys as string[];\n        this.fuse_options.keys = keys.map((key) => this.frontend.config().locale + '.' + key);\n      }\n    }\n\n    return this.fuse_options;\n  }\n\n  public async getFuse(): Promise<Fuse<DocumentType>> {\n    await this.getSearchIndex();\n    this.fuse = new Fuse<DocumentType>(\n      this.searchData,\n      this.fuse_options,\n      this.searchIndex as FuseIndex<DocumentType>\n    );\n    return this.fuse;\n  }\n\n  public async getSearchIndex(force = false) {\n    if (this.searchIndex && !force) {\n      return this.searchIndex;\n    }\n\n    const response = await fetch(this.frontend.config().search_index_url);\n    this.searchData = await response.json();\n\n    this.getOptions();\n    this.searchIndex = await Fuse.createIndex<DocumentType>(\n      this.fuse_options.keys,\n      this.searchData\n    );\n\n    return this.searchIndex;\n  }\n\n  public renderResults(target: HTMLElement, results: FuseResult<DocumentType>[]) {\n    const template = document.getElementById('static-snap-search-result-template')?.innerHTML;\n\n    if (!template) {\n      return;\n    }\n\n    const rendered = Mustache;\n    const html = results\n      .map((result) => {\n        return '<li>' + rendered.render(template, result.item) + '</li>';\n      })\n      .join('');\n\n    target.innerHTML = '<ol>' + html + '</ol>';\n  }\n}\n"]}