{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/pages/deployments/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { JsonViewer } from '@textea/json-viewer';\nimport apiFetch from '@wordpress/api-fetch';\n\nimport Icon from '@staticsnap/dashboard/components/icon';\nimport LightTooltip from '@staticsnap/dashboard/components/light-tooltip';\nimport Table from '@staticsnap/dashboard/components/table/table';\nimport DeploymentInterface from '@staticsnap/dashboard/interfaces/deployment.interface';\n\nconst Status = {\n  1: 'Running',\n  2: 'Completed',\n  3: 'Canceled',\n  4: 'Paused',\n  5: 'Failed',\n};\n\nexport default function DeploymentsIndex() {\n  //const navigate = useNavigate();\n\n  const [deployments, setDeployments] = useState<DeploymentInterface[]>([]);\n  const [loading, setLoading] = useState(true);\n  const getDeployments = () => {\n    apiFetch({ path: '/static-snap/v1/deployments-history' }).then((environments) => {\n      setDeployments(Array.from(environments as DeploymentInterface[]));\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getDeployments();\n  }, []);\n\n  return (\n    <Table\n      title=\"Deployments\"\n      loading={loading}\n      rows={deployments}\n      columns={[\n        {\n          field: 'environment_name',\n          headerName: 'Environment',\n        },\n        {\n          field: 'status',\n          headerName: 'Status',\n          render: (status: number) => Status[status as keyof typeof Status],\n        },\n        {\n          field: 'start_time',\n          headerName: 'Start',\n          render: (value: number) => new Date(value * 1000).toLocaleString(),\n        },\n        {\n          field: 'end_time',\n          headerName: 'End',\n          render: (value: number) => (value ? new Date(value * 1000).toLocaleString() : null),\n        },\n        {\n          field: 'status_information',\n          headerName: 'Status info',\n          render: (value) =>\n            value ? (\n              <LightTooltip\n                title={<JsonViewer value={JSON.parse(value)} theme={'light'} rootName={false} />}\n              >\n                <Icon icon={'material-symbols:info'} />\n              </LightTooltip>\n            ) : null,\n        },\n        {\n          field: 'error',\n          headerName: 'Error',\n          render: (value) =>\n            value ? (\n              <LightTooltip\n                title={<JsonViewer value={JSON.parse(value)} theme={'light'} rootName={false} />}\n              >\n                <Icon icon={'material-symbols:info'} />\n              </LightTooltip>\n            ) : null,\n        },\n      ]}\n      actions={[\n        {\n          children: 'Delete',\n          id: 'delete',\n          onRowClick: (_row, index) => {\n            console.log('TODO Delete', index);\n          },\n        },\n      ]}\n    />\n  );\n}\n"]}