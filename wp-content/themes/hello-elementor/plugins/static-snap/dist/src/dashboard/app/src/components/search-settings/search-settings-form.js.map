{"version":3,"file":"search-settings-form.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/components/search-settings/search-settings-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Stack from '@mui/material/Stack';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport apiFetch from '@wordpress/api-fetch';\nimport { __ } from '@wordpress/i18n';\nimport { useForm } from 'react-hook-form';\n\nimport InputsForExtensionsSetting from '../form/inputs-for-extension-setting';\nimport FormProvider from '@staticsnap/dashboard/components/form/form-provider';\nimport Select from '@staticsnap/dashboard/components/form/select';\nimport Switch from '@staticsnap/dashboard/components/form/switch';\nimport useOptions from '@staticsnap/dashboard/hooks/use-options';\nimport ExtensionInterface, {\n  ExtensionSetting,\n  ExtensionSettingValue,\n} from '@staticsnap/dashboard/interfaces/extension.interface';\nimport SearchSettingInterface from '@staticsnap/dashboard/interfaces/search-settings.interface';\n\ntype SearchSettingsFormProps = {\n  title: string;\n};\n\nconst SearchSettingsForm = ({ title }: SearchSettingsFormProps) => {\n  const searchOptions = useOptions('search');\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchExtensions, setSearchExtensions] = useState<Record<string, ExtensionInterface>>({});\n  const [value] = useState<SearchSettingInterface>();\n  const [searchSettings, setSearchSettings] = useState<ExtensionSetting>({});\n  const defaultValues: SearchSettingInterface = {\n    enabled: true,\n    settings: {},\n    type: 'fuse-js',\n  };\n\n  const methods = useForm({\n    defaultValues,\n  });\n\n  const isDirty = methods.formState.isDirty;\n\n  const onSubmit = useCallback(\n    async (_data: SearchSettingInterface) => {\n      setIsLoading(true);\n\n      await searchOptions.setOptions(_data as unknown as Record<string, unknown>);\n\n      setIsLoading(false);\n      methods.reset(methods.getValues());\n    },\n    [methods, searchOptions]\n  );\n\n  // watch type change.\n  const selectedType = methods.watch(['type'])[0];\n  const searchEnabled = methods.watch(['enabled'])[0];\n\n  const getSearchOptions = useCallback(async () => {\n    const options = await searchOptions.getOptions();\n    if (options) {\n      methods.reset(options);\n    }\n  }, [methods, searchOptions]);\n\n  useEffect(() => {\n    const buildSettings = async () => {\n      if (!searchOptions.currentOptions) {\n        await getSearchOptions();\n      }\n      if (selectedType && searchExtensions[selectedType] && searchOptions.currentOptions) {\n        // fill default values from settings\n\n        const value = methods.getValues();\n\n        const settingsValues = Object.keys(searchExtensions[selectedType].settings).reduce(\n          (acc, name) => {\n            let formValue = undefined;\n            if (value && value.settings && value.settings[name]) {\n              formValue = value.settings[name];\n            }\n            const settingValue =\n              formValue ||\n              ((searchExtensions[selectedType].settings[name].default ||\n                '') as ExtensionSettingValue);\n            acc[name] = settingValue;\n            return acc;\n          },\n          {} as { [key: string]: ExtensionSettingValue }\n        );\n        methods.setValue(`settings`, settingsValues);\n        setSearchSettings(searchExtensions[selectedType].settings);\n      }\n    };\n    buildSettings();\n  }, [\n    selectedType,\n    searchExtensions,\n    methods,\n    value,\n    searchOptions.currentOptions,\n    getSearchOptions,\n  ]);\n\n  const getSearchExtensions = useCallback(() => {\n    apiFetch({ path: '/static-snap/v1/extensions/search' }).then((types) => {\n      setSearchExtensions(types as Record<string, ExtensionInterface>);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    getSearchExtensions();\n  }, [getSearchExtensions]);\n\n  const searchExtensionsForSelect = Object.keys(searchExtensions).map((type) => {\n    const current = searchExtensions[type];\n    const disabled = !current.available;\n\n    return {\n      disabled,\n      label: type,\n      value: type,\n    };\n  });\n\n  return (\n    <Card elevation={0}>\n      <CardHeader title={title} />\n      <CardContent>\n        {/* Form */}\n        <FormProvider methods={methods} onSubmit={methods.handleSubmit(onSubmit)}>\n          <Stack direction=\"column\" spacing={2}>\n            {/* use Search ? */}\n            <Switch name=\"enabled\" label={__('Enable search', 'static-snap')} />\n            {searchEnabled && (\n              <>\n                {/* Type */}\n                <Select\n                  name=\"type\"\n                  items={searchExtensionsForSelect}\n                  label=\"Type\"\n                  required={true}\n                />\n                {/* Dynamic setttings */}\n                <InputsForExtensionsSetting setting={searchSettings} />\n              </>\n            )}\n            {/* Save */}\n            <Stack direction=\"row\" sx={{ mt: 3 }}>\n              <LoadingButton\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isLoading}\n                disabled={!isDirty}\n              >\n                {__('Save', 'static-snap')}\n              </LoadingButton>\n            </Stack>\n          </Stack>\n        </FormProvider>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SearchSettingsForm;\n"]}