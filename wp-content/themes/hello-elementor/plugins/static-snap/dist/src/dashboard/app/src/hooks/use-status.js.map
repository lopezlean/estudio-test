{"version":3,"file":"use-status.js","sourceRoot":"","sources":["../../../../../../src/dashboard/app/src/hooks/use-status.ts"],"names":[],"mappings":";;;AAAA,+BAAyD;AAEzD,2EAA4C;AAI5C,IAAM,SAAS,GAAG;IACV,IAAA,KAAsB,IAAA,gBAAQ,EAAkB;QACpD,YAAY,EAAE,KAAK;QACnB,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;QAChB,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,KAAK;QACjB,eAAe,EAAE,SAAS;KAC3B,CAAC,EAPK,MAAM,QAAA,EAAE,SAAS,QAOtB,CAAC;IAEH,IAAM,WAAW,GAAG,IAAA,mBAAW,EAAC;;;;wBACb,qBAAM,IAAA,mBAAQ,EAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC,EAAA;;oBAA7D,QAAQ,GAAG,SAAkD;oBACnE,SAAS,CAAC,QAA2B,CAAC,CAAC;;;;SACxC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAA,iBAAS,EAAC;QACR,+BAA+B;QAC/B,WAAW,EAAE,CAAC;QACd,IAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAEhD,OAAO,cAAM,OAAA,aAAa,CAAC,QAAQ,CAAC,EAAvB,CAAuB,CAAC;IACvC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,IAAA,iBAAS,EAAC;QACR,IAAM,QAAQ,GAAG,UAAC,MAAa;YAC7B,WAAW,EAAE,CAAC;QAChB,CAAC,CAAC;QACF,mDAAmD;QACnD,MAAM,CAAC,gBAAgB,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;QAC/D,OAAO,cAAM,OAAA,MAAM,CAAC,mBAAmB,CAAC,2BAA2B,EAAE,QAAQ,CAAC,EAAjE,CAAiE,CAAC;IACjF,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport apiFetch from '@wordpress/api-fetch';\n\nimport StatusInterface from '@staticsnap/dashboard/interfaces/status.interface';\n\nconst useStatus = () => {\n  const [status, setStatus] = useState<StatusInterface>({\n    is_cancelled: false,\n    is_done: false,\n    is_paused: false,\n    is_processing: false,\n    is_running: false,\n    last_deployment: undefined,\n  });\n\n  const fetchStatus = useCallback(async () => {\n    const response = await apiFetch({ path: '/static-snap/v1/status' });\n    setStatus(response as StatusInterface);\n  }, []);\n\n  useEffect(() => {\n    // fetch status every 5 seconds\n    fetchStatus();\n    const interval = setInterval(fetchStatus, 5000);\n\n    return () => clearInterval(interval);\n  }, [fetchStatus]);\n\n  useEffect(() => {\n    const listener = (_event: Event) => {\n      fetchStatus();\n    };\n    // listen to window event static-snap-status-update\n    window.addEventListener('static-snap/status-update', listener);\n    return () => window.removeEventListener('static-snap/status-update', listener);\n  }, [fetchStatus]);\n\n  return status;\n};\n\nexport default useStatus;\n"]}