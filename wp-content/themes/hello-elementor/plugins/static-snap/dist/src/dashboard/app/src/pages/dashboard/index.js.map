{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/dashboard/app/src/pages/dashboard/index.tsx"],"names":[],"mappings":";;;;AAAA,+BAA4C;AAE5C,oEAAsC;AACtC,kFAAoD;AACpD,gFAAkD;AAClD,4EAA8C;AAC9C,gFAAkD;AAClD,gIAAiG;AACjG,iHAAkF;AAClF,8FAA+D;AAE/D,2EAA4C;AAC5C,wCAA8C;AAE9C,IAAM,cAAc,GAAG;IACf,IAAA,KAAgD,IAAA,gBAAQ,EAAU,IAAI,CAAC,EAAtE,mBAAmB,QAAA,EAAE,sBAAsB,QAA2B,CAAC;IACxE,IAAA,KAAkC,IAAA,gBAAQ,EAAyB,EAAE,CAAC,EAArE,YAAY,QAAA,EAAE,eAAe,QAAwC,CAAC;IAC7E,IAAM,MAAM,GAAG,IAAA,oBAAS,GAAE,CAAC;IAE3B,IAAA,iBAAS,EAAC;QACR,IAAM,eAAe,GAAG;;;;4BACL,qBAAM,IAAA,mBAAQ,EAAC,EAAE,IAAI,EAAE,8BAA8B,EAAE,CAAC,EAAA;;wBAAnE,QAAQ,GAAG,SAAwD;wBACzE,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkC,CAAC,CAAC,CAAC;wBAChE,sBAAsB,CAAC,KAAK,CAAC,CAAC;;;;aAC/B,CAAC;QACF,eAAe,EAAE,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,wBAAC,cAAI,IAAC,SAAS,EAAE,CAAC,aAChB,uBAAC,oBAAU,IAAC,KAAK,EAAE,IAAA,SAAE,EAAC,WAAW,EAAE,aAAa,CAAC,GAAI,EACrD,wBAAC,qBAAW,eACV,wCAAI,IAAA,SAAE,EAAC,8BAA8B,EAAE,aAAa,CAAC,GAAK,EACzD,mBAAmB,CAAC,CAAC,CAAC,CACrB,uBAAC,kBAAQ,IAAC,OAAO,EAAC,aAAa,EAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,GAAI,CAC9D,CAAC,CAAC,CAAC,CACF,6DACE,uBAAC,oBAAU,IAAC,OAAO,EAAC,IAAI,YAAE,IAAA,SAAE,EAAC,oBAAoB,EAAE,aAAa,CAAC,GAAc,EAC/E,uBAAC,2BAAgB,IACf,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,MAAM,CAAC,UAAU,EAC3B,cAAc,EAAC,OAAO,EACtB,MAAM,EAAE,UAAC,WAAW,IAAK,OAAA,CACvB,wCACG,IAAA,cAAO,EACN,IAAA,SAAE,EAAC,6CAA6C,EAAE,aAAa,CAAC,EAChE,WAAW,CAAC,IAAI,CACjB,GACC,CACL,EAPwB,CAOxB,YAEA,UAAC,EAAM;wCAAJ,EAAE,QAAA;oCAAO,OAAA,uBAAC,yBAAc,IAAC,cAAc,EAAE,MAAM,CAAC,EAAE,CAAC,GAAI;gCAA9C,CAA8C,GAC1C,IAClB,CACJ,IACW,IACT,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Skeleton from '@mui/material/Skeleton';\nimport Typography from '@mui/material/Typography';\nimport LastDeployment from '@staticsnap/dashboard/components/deployment-history/last-deployment';\nimport EnvironmentsTabs from '@staticsnap/dashboard/components/environments-tabs';\nimport useStatus from '@staticsnap/dashboard/hooks/use-status';\nimport EnvironmentInterface from '@staticsnap/dashboard/interfaces/environment.interface';\nimport apiFetch from '@wordpress/api-fetch';\nimport { __, sprintf } from '@wordpress/i18n';\n\nconst DashboardIndex = () => {\n  const [environmentsLoading, setEnvironmentsLoading] = useState<boolean>(true);\n  const [environments, setEnvironments] = useState<EnvironmentInterface[]>([]);\n  const status = useStatus();\n\n  useEffect(() => {\n    const getEnvironments = async () => {\n      const response = await apiFetch({ path: '/static-snap/v1/environments' });\n      setEnvironments(Array.from(response as EnvironmentInterface[]));\n      setEnvironmentsLoading(false);\n    };\n    getEnvironments();\n  }, []);\n\n  return (\n    <Card elevation={0}>\n      <CardHeader title={__('Dashboard', 'static-snap')} />\n      <CardContent>\n        <p>{__('Welcome back to Static Snap!', 'static-snap')}</p>\n        {environmentsLoading ? (\n          <Skeleton variant=\"rectangular\" width={'100%'} height={35} />\n        ) : (\n          <>\n            <Typography variant=\"h6\">{__('Your environments:', 'static-snap')}</Typography>\n            <EnvironmentsTabs\n              environments={environments}\n              disabled={status.is_running}\n              justifyContent=\"start\"\n              header={(environment) => (\n                <p>\n                  {sprintf(\n                    __('Your site will be deployed using %s engine.', 'static-snap'),\n                    environment.type\n                  )}\n                </p>\n              )}\n            >\n              {({ id }) => <LastDeployment environment_id={Number(id)} />}\n            </EnvironmentsTabs>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DashboardIndex;\n"]}