{"version":3,"file":"use-boolean.js","sourceRoot":"","sources":["../../../../../../src/dashboard/app/src/hooks/use-boolean.ts"],"names":[],"mappings":";;;AAAA,+BAA8C;AAY9C,SAAgB,UAAU,CAAC,YAAsB;IACzC,IAAA,KAAoB,IAAA,gBAAQ,EAAC,CAAC,CAAC,YAAY,CAAC,EAA3C,KAAK,QAAA,EAAE,QAAQ,QAA4B,CAAC;IAEnD,IAAM,MAAM,GAAG,IAAA,mBAAW,EAAC;QACzB,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,OAAO,GAAG,IAAA,mBAAW,EAAC;QAC1B,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,QAAQ,GAAG,IAAA,mBAAW,EAAC;QAC3B,QAAQ,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,EAAL,CAAK,CAAC,CAAC;IAC5B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;QACL,KAAK,OAAA;QACL,MAAM,QAAA;QACN,OAAO,SAAA;QACP,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC;AACJ,CAAC;AAtBD,gCAsBC","sourcesContent":["import { useCallback, useState } from 'react';\n\n// ----------------------------------------------------------------------\n\ninterface ReturnType {\n  value: boolean;\n  onTrue: () => void;\n  onFalse: () => void;\n  onToggle: () => void;\n  setValue: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport function useBoolean(defaultValue?: boolean): ReturnType {\n  const [value, setValue] = useState(!!defaultValue);\n\n  const onTrue = useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const onFalse = useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const onToggle = useCallback(() => {\n    setValue((prev) => !prev);\n  }, []);\n\n  return {\n    value,\n    onTrue,\n    onFalse,\n    onToggle,\n    setValue\n  };\n}\n"]}